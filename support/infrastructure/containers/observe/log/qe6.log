[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/action_list.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/child_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/enum.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/file.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/string.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/type.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/help/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/deprecated.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/stringify.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/array.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/chain-of-responsibility.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/safety.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/whitespace.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/flags.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/deps.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_type_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/help/_help_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_argument_types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/_check_version.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/string.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/help/help_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/provider/deno_land.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/provider/github.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/provider/nest_land.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/provider.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/upgrade_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/bash.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/fish.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/zsh.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/completions_command.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_dumper/dumper.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/constants.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v1.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v3.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v4.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v5.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/graph.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/domain/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dml/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dql/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/graph.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/assurance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/governance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/ingest.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/ingest-fs.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/assurance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/component.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/content.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/notebook.ts
[0m[32mDownload[0m https://cdn.sheetjs.com/xlsx-0.20.1/package/xlsx.mjs
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/_utils/distance.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/deprecated.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_validate_flags.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/fmt/colors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/table.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_spread.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_bash_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_fish_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_zsh_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/complete.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_error.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_utils.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_dumper/dumper_state.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/_common.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/bytes/concat.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/crypto.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/domain/domain.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/domain/domains.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dml/insert.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/schema.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/type.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/view.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dql/criteria.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dql/select.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/dialect.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/directive.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/js.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/interpolate.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/quality-system.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/namespace.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/sql-notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/sql.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/polygenix-notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/polygenix.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/deps.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/quality-system/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/deps.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/sys-info.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/deps.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/markdown.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/deps.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/quality-system.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/zod-aide.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/record.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/column.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/constraint.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/foreign-key.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/index.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/lint.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/primary-key.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/record.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/select.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/self-ref.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/table.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/command.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/quality-system/governance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/diagram/plantuml-ie-notation.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/enum-table.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/typical-cli.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/typical.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/consume_words.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/_utils.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/mod.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_wasm/lib/deno_std_wasm_crypto.generated.mjs
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_fnv/fnv32.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_fnv/fnv64.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/meta-command.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/set.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/include.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/deps.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/flexible-text.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/state-table.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/empty_dir.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_dir.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_file.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_link.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_symlink.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/exists.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/expand_glob.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/move.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/copy.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/walk.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/eol.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/_util/os.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/win32.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/posix.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/common.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/separator.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_interface.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/glob.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/index.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/deps.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/core.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/default.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/extended.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/failsafe.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/json.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_fnv/util.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/log/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/help/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/action_list.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/child_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/enum.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/file.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/string.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/type.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/_errors.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/_util.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/_util/asserts.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_constants.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_util.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/external.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/flags.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/deps.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/help/_help_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/bash.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/complete.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/fish.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/zsh.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/provider/deno_land.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/provider/github.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/provider/nest_land.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/provider.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/upgrade_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types/string.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/errors.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/parseUtil.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/typeAliases.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/util.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/types.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/ZodError.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/console/_data.json
[0m[32mDownload[0m https://deno.land/std@0.196.0/console/_rle.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/binary.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/bool.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/float.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/function.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/int.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/map.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/merge.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/nil.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/omap.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/pairs.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/regexp.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/seq.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/set.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/str.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/timestamp.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/undefined.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/fmt/colors.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/fs/exists.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/io/buf_writer.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/assert/assertion_error.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/deprecated.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/_validate_flags.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/_bash_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/_fish_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/_zsh_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/enumUtil.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/errorUtil.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/partialUtil.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/assert/assert.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/type.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/bytes/copy.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/border.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/cell.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/layout.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/row.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/assert/assertion_error.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/deps.ts
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/action_list.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/child_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/enum.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/file.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/types/string.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/type.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/help/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/deprecated.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/stringify.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/array.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/chain-of-responsibility.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/safety.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/whitespace.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/flags.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/deps.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_type_utils.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/help/_help_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_argument_types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/upgrade/_check_version.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types/integer.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_dumper/dumper.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/constants.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v1.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v3.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v4.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/uuid/v5.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/graph.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/domain/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dml/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/dql/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/emit/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/graph.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/assurance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/governance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/ingest.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/ingest-fs.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/assurance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/orchestration/duckdb/notebook.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/component.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/content.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/sqlpage/notebook.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/_utils/distance.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/deprecated.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/_validate_flags.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/fmt/colors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/table.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/_spread.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_bash_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_fish_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/_zsh_completions_generator.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/command/completions/complete.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_error.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_utils.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_dumper/dumper_state.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/flags/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/border.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/cell.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/column.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/_layout.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/row.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_wasm/mod.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_fnv/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/quality-system.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/zod-aide.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/record.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/column.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/constraint.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/foreign-key.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/index.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/lint.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/primary-key.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/record.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/select.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/self-ref.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/ddl/table/table.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/command.ts
[0m[32mDownload[0m https://deno.land/x/eventemitter@1.2.4/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/quality-system/governance.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/render/diagram/plantuml-ie-notation.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/enum-table.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/typical-cli.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/typical.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/mod.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/mod.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/consume_words.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/_utils.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/meta-command.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/set.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/pre-process/psql/include.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/notebook/deps.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/lib/universal/flexible-text.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/mod.ts
[0m[32mDownload[0m https://raw.githubusercontent.com/netspective-labs/sql-aide/v0.13.15/pattern/typical/state-table.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/empty_dir.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_dir.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_file.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_link.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/ensure_symlink.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/exists.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/expand_glob.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/move.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/copy.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/walk.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/eol.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/_util/os.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/win32.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/posix.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/common.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/separator.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_interface.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/glob.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/index.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v1.0.0-rc.3/table/deps.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/core.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/default.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/extended.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/failsafe.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema/json.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/crypto/_fnv/util.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/log/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/completions/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/help/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/upgrade/mod.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/action_list.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/boolean.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/child_command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/command.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/enum.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/file.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/integer.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/number.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/types/string.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/type.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/_errors.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/command/deprecated.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/fs/_util.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/_util/asserts.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_constants.ts
[0m[32mDownload[0m https://deno.land/std@0.191.0/path/_util.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/external.ts
[0m[32mDownload[0m https://deno.land/std@0.196.0/console/unicode_width.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/schema.ts
[0m[32mDownload[0m https://deno.land/std@0.209.0/yaml/_type/mod.ts
[0m[32mDownload[0m https://deno.land/x/zod@v3.21.4/helpers/errorUtil.ts
[0m[32mDownload[0m https://deno.land/std@0.204.0/bytes/copy.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/flags/types.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/border.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/cell.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/layout.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/row.ts
[0m[32mDownload[0m https://deno.land/x/cliffy@v0.25.7/table/deps.ts
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
{
  ingress: {
    home: "/SFTP/qe6/ingress",
    resolvedPath: [Function: resolvedPath],
    movedPath: [AsyncFunction: movedPath]
  }
}
Processing files in /SFTP/qe6/ingress
